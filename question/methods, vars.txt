
Class Method -->

A class method is a method which is bound to the class and not the object of the class.
They have the access to the state of the class as it takes a class parameter that points to the class and not the object instance.
It can modify a class state that would apply across all the instances of the class. 
For example it can modify a class variable that will be applicable to all the instances.

Static Method -->

A static method is also a method which is bound to the class and not the object of the class.
A static method can’t access or modify class state.
It is present in a class because it makes sense for the method to be present in class.

Class method vs Static Method -->

1. A class method takes cls as first parameter while a static method needs no specific parameters.
2. A class method can access or modify class state while a static method can’t access or modify it.
3. In general, static methods know nothing about class state. They are utility type methods that take 
some parameters and work upon those parameters. On the other hand class methods must have class as parameter.
4. We use @classmethod decorator in python to create a class method and we use @staticmethod decorator to create a 
static method in python.

When to use what?

1. We generally use class method to create factory methods. 
Factory methods return class object ( similar to a constructor ) for different use cases.
2. We generally use static methods to create utility functions.